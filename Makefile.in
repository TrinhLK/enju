# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

################################################################################
###
###  Copyright (c) 2005-2010, Tsujii Laboratory, The University of Tokyo.
###  All rights reserved.
###
###  Name: Makefile.am
###  Makefile for Enju
###
################################################################################

VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/mayz-src/config_mayz.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
SOURCES =
DIST_SOURCES =
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(enjudir)" "$(DESTDIR)$(enjudir)"
DATA = $(enju_DATA) $(nobase_enju_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	cscope distdir dist dist-all distcheck
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in AUTHORS COPYING INSTALL README \
	TODO compile config.guess config.sub depcomp install-sh \
	missing
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMIS = @AMIS@
AMTAR = @AMTAR@
AM_CXXFLAGS = @AM_CXXFLAGS@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
WL_NOWHOLE = @WL_NOWHOLE@
WL_WHOLE = @WL_WHOLE@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
SUBDIRS = ll \
          docs/mayz-manual \
          mayz-src \
          mayz \
          enju-devel \
          docs/enju-manual \
          enju-src \
          enju \
          mogura-devel \
          mogura-src \
          mogura \
          enju2ptb \
          windows


######################################################################
CORPUS_NAME = wsj02-21
GRAMMAR_NAME = Enju
WORD_THRESHOLD = 20
TEMPLATE_THRESHOLD = 3
UNKNOWN_WORD_THRESHOLD = 20
UNKNOWN_WORD_TEMPLATE_THRESHOLD = 50
LEXFEATURE_THRESHOLD = 3
FOREST_FEATURE_THRESHOLD = 3
#USE_REFERENCE_DIST = 0

# CORPUS_NAME = wsj02
# GRAMMAR_NAME = Enju-small
# WORD_THRESHOLD = 5
# TEMPLATE_THRESHOLD = 0
# UNKNOWN_WORD_THRESHOLD = 5
# UNKNOWN_WORD_TEMPLATE_THRESHOLD = 5
# LEXFEATURE_THRESHOLD = 3
# FOREST_FEATURE_THRESHOLD = 3
GENIA_DOMAIN = genia
GENIA_CORPUS_NAME = genia0001-1600
GENIA_GRAMMAR_NAME = Enju-GENIA
GENIA_LEXICON = $(DATA_DIR)/$(GENIA_GRAMMAR_NAME).adapt-lexicon
GENIA_TEMPLATES = $(DATA_DIR)/$(GENIA_GRAMMAR_NAME).adapt-templates
GENIA_FOMMODEL = $(DATA_DIR)/$(GENIA_GRAMMAR_NAME)-adaptsyn.output.gz \
                 $(DATA_DIR)/$(GENIA_GRAMMAR_NAME)-adaptlex.output.gz

BROWN_DOMAIN = brown
BROWN_CORPUS_NAME = brown-train
BROWN_GRAMMAR_NAME = Enju-Brown
BROWN_LEXICON = $(DATA_DIR)/$(BROWN_GRAMMAR_NAME).adapt-lexicon
BROWN_TEMPLATES = $(DATA_DIR)/$(BROWN_GRAMMAR_NAME).adapt-templates
BROWN_FOMMODEL = $(DATA_DIR)/$(BROWN_GRAMMAR_NAME)-adaptsyn.output.gz \
                 $(DATA_DIR)/$(BROWN_GRAMMAR_NAME)-adaptlex.output.gz

IQ_DOMAIN = iq
IQ_CORPUS_NAME = iq-train
IQ_GRAMMAR_NAME = Enju-IQ
IQ_LEXICON = $(DATA_DIR)/$(IQ_GRAMMAR_NAME).adapt-lexicon
IQ_TEMPLATES = $(DATA_DIR)/$(IQ_GRAMMAR_NAME).adapt-templates
IQ_FOMMODEL = $(DATA_DIR)/$(IQ_GRAMMAR_NAME)-adaptsyn.output.gz \
                 $(DATA_DIR)/$(IQ_GRAMMAR_NAME)-adaptlex.output.gz

WORDNET_DIR = wordnet/dict
WSJ_DIR = penn/combined/wsj
GENIA_DIR = genia
#BROWN_DIR = brown
#BROWN_DIR = penn3/PARSED/MRG/BROWN
BROWN_DIR = penn3/parsed/mrg/brown
GTREC_DIR = gtrec
ADAPT_DOMAIN = 
ADAPT_CORPUS_NAME = 
ADAPT_GRAMMAR_NAME = 
ADAPT_WORD_THRESHOLD = 20
ADAPT_TEMPLATE_THRESHOLD = 3
ADAPT_UNKNOWN_WORD_THRESHOLD = 20
ADAPT_UNKNOWN_WORD_TEMPLATE_THRESHOLD = 50
ADAPT_LEXFEATURE_THRESHOLD = 3
ADAPT_FOREST_FEATURE_THRESHOLD = 3
#ADAPT_USE_REFERENCE_DIST = 0

######################################################################
######################################################################

######################################################################
DATA_DIR = DATA
PARSER_DIR = enju-src
MAYZ_DIR = mayz-src
TAGGER_DIR = stepp-tagger
LILFES = ll/src/lilfes
ENJU_BIN = $(PARSER_DIR)/enju
WORDNET = $(WORDNET_DIR)/index.noun \
	$(WORDNET_DIR)/index.verb \
	$(WORDNET_DIR)/index.adj \
	$(WORDNET_DIR)/index.adv \
	$(WORDNET_DIR)/noun.exc \
	$(WORDNET_DIR)/verb.exc \
	$(WORDNET_DIR)/adj.exc \
	$(WORDNET_DIR)/adv.exc

DICT = $(DATA_DIR)/index.noun \
	$(DATA_DIR)/index.verb \
	$(DATA_DIR)/index.adj \
	$(DATA_DIR)/index.adv \
	$(DATA_DIR)/noun.exc \
	$(DATA_DIR)/verb.exc \
	$(DATA_DIR)/adj.exc \
	$(DATA_DIR)/adv.exc

TREEBANK = $(DATA_DIR)/$(CORPUS_NAME).treebank
DERIVBANK = $(DATA_DIR)/$(CORPUS_NAME).derivbank
LEXICON = $(DATA_DIR)/$(GRAMMAR_NAME).lexicon
TEMPLATES = $(DATA_DIR)/$(GRAMMAR_NAME).templates
FOMMODEL = $(DATA_DIR)/$(GRAMMAR_NAME)-syn.output.gz \
           $(DATA_DIR)/$(GRAMMAR_NAME)-lex.output.gz

ADAPT_TREEBANK = $(DATA_DIR)/$(ADAPT_CORPUS_NAME).treebank
ADAPT_DERIVBANK = $(DATA_DIR)/$(ADAPT_CORPUS_NAME).derivbank
ADAPT_LEXICON = $(DATA_DIR)/$(ADAPT_GRAMMAR_NAME).adapt-lexicon
ADAPT_TEMPLATES = $(DATA_DIR)/$(ADAPT_GRAMMAR_NAME).adapt-templates
ADAPT_FOMMODEL = $(DATA_DIR)/$(ADAPT_GRAMMAR_NAME)-adaptsyn.output.gz \
                 $(DATA_DIR)/$(ADAPT_GRAMMAR_NAME)-adaptlex.output.gz


######################################################################
MOGURA_PARSER_DIR = mogura-src
MOGURA_TOOL_DIR = mogura-src
MOGURA_BIN = $(MOGURA_PARSER_DIR)/mogura

# approximation of Enju grammar
MOGURA_CFG = $(DATA_DIR)/mogura-$(GRAMMAR_NAME).cfg

# subset of the CFG grammar
MOGURA_R_CFG = $(DATA_DIR)/mogura-$(GRAMMAR_NAME).restricted.cfg

# GENIA grammar
MOGURA_GENIA_CFG = $(DATA_DIR)/mogura-$(GENIA_GRAMMAR_NAME).cfg
MOGURA_GENIA_R_CFG = $(DATA_DIR)/mogura-$(GENIA_GRAMMAR_NAME).restricted.cfg

# Brown grammar
MOGURA_BROWN_CFG = $(DATA_DIR)/mogura-$(BROWN_GRAMMAR_NAME).cfg
MOGURA_BROWN_R_CFG = $(DATA_DIR)/mogura-$(BROWN_GRAMMAR_NAME).restricted.cfg

# GTREC and Brown Imperatives & Questions grammar
MOGURA_IQ_CFG = $(DATA_DIR)/mogura-$(IQ_GRAMMAR_NAME).cfg
MOGURA_IQ_R_CFG = $(DATA_DIR)/mogura-$(IQ_GRAMMAR_NAME).restricted.cfg

# variables for domain adaptation
MOGURA_ADAPT_CFG = $(DATA_DIR)/mogura-$(ADAPT_GRAMMAR_NAME).cfg
MOGURA_ADAPT_R_CFG = $(DATA_DIR)/mogura-$(ADAPT_GRAMMAR_NAME).restricted.cfg

# data for the disambiguation module; common for original/adapted model
MOGURA_MODEL = $(DATA_DIR)/mogura.model.gz
MOGURA_CFG_FILES = $(MOGURA_CFG) $(MOGURA_R_CFG)
MOGURA_GENIA_CFG_FILES = $(MOGURA_GENIA_CFG) $(MOGURA_GENIA_R_CFG)
MOGURA_BROWN_CFG_FILES = $(MOGURA_BROWN_CFG) $(MOGURA_BROWN_R_CFG)
MOGURA_IQ_CFG_FILES = $(MOGURA_IQ_CFG) $(MOGURA_IQ_R_CFG)

######################################################################
ENJU2PTB_DATA_FILES = $(DATA_DIR)/$(CORPUS_NAME).conv-grammar \
                      $(DATA_DIR)/$(GENIA_CORPUS_NAME).conv-grammar

enjudir = $(libdir)/enju
nobase_enju_DATA = $(DICT) $(LEXICON) $(TEMPLATES) $(FOMMODEL) \
                   $(GENIA_LEXICON) $(GENIA_TEMPLATES) $(GENIA_FOMMODEL) \
                   $(BROWN_LEXICON) $(BROWN_TEMPLATES) $(BROWN_FOMMODEL) \
                   $(IQ_LEXICON) $(IQ_TEMPLATES) $(IQ_FOMMODEL) \
                   $(MOGURA_MODEL) $(MOGURA_CFG_FILES) \
                   $(MOGURA_GENIA_CFG_FILES) $(MOGURA_BROWN_CFG_FILES) $(MOGURA_IQ_CFG_FILES) \
                   $(ENJU2PTB_DATA_FILES)

enju_DATA = COPYING README README.ja
EXTRA_DIST = AUTHORS INSTALL INSTALL.win run-enju run-mogura run-super $(enju_DATA) $(nobase_enju_DATA)
all: all-recursive

.SUFFIXES:
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):
install-enjuDATA: $(enju_DATA)
	@$(NORMAL_INSTALL)
	@list='$(enju_DATA)'; test -n "$(enjudir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(enjudir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(enjudir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(enjudir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(enjudir)" || exit $$?; \
	done

uninstall-enjuDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(enju_DATA)'; test -n "$(enjudir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(enjudir)'; $(am__uninstall_files_from_dir)
install-nobase_enjuDATA: $(nobase_enju_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nobase_enju_DATA)'; test -n "$(enjudir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(enjudir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(enjudir)" || exit 1; \
	fi; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo " $(MKDIR_P) '$(DESTDIR)$(enjudir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(enjudir)/$$dir"; }; \
	    echo " $(INSTALL_DATA) $$xfiles '$(DESTDIR)$(enjudir)/$$dir'"; \
	    $(INSTALL_DATA) $$xfiles "$(DESTDIR)$(enjudir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_enjuDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_enju_DATA)'; test -n "$(enjudir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	dir='$(DESTDIR)$(enjudir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-recursive
all-am: Makefile $(DATA)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(enjudir)" "$(DESTDIR)$(enjudir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -f Makefile
distclean-am: clean-am distclean-generic distclean-tags

dvi: dvi-recursive

dvi-am:

html-am:

info: info-recursive

info-am:

install-data-am: install-enjuDATA install-nobase_enjuDATA

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-exec-local

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-enjuDATA uninstall-nobase_enjuDATA

.MAKE: $(am__recursive_targets) install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--refresh check check-am clean clean-cscope clean-generic \
	cscope cscopelist-am ctags ctags-am dist dist-all dist-bzip2 \
	dist-gzip dist-hook dist-lzip dist-shar dist-tarZ dist-xz \
	dist-zip distcheck distclean distclean-generic distclean-tags \
	distcleancheck distdir distuninstallcheck dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-enjuDATA \
	install-exec install-exec-am install-exec-local install-html \
	install-html-am install-info install-info-am install-man \
	install-nobase_enjuDATA install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-generic pdf \
	pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-enjuDATA uninstall-nobase_enjuDATA

.PRECIOUS: Makefile


######################################################################

parser:
	cd $(PARSER_DIR); $(MAKE)
	cd $(MOGURA_PARSER_DIR); $(MAKE)
mayz:
	cd $(MAYZ_DIR); $(MAKE)

tagger:
	cd $(TAGGER_DIR); $(MAKE)
install-exec-local:
	cd $(TAGGER_DIR); $(MAKE) install INSTALLDIR=$(DESTDIR)$(prefix)
dist-hook:
	cd $(TAGGER_DIR); $(MAKE) dist DISTDIR=../$(distdir)/$(TAGGER_DIR)

install-run-enju:
	$(install_sh) -c run-enju $(DESTDIR)$(prefix)/enju
	$(install_sh) -c run-mogura $(DESTDIR)$(prefix)/mogura
	$(install_sh) -c run-super $(DESTDIR)$(prefix)/super
	$(install_sh) -c COPYING $(DESTDIR)$(prefix)/COPYING
	$(install_sh) -c README $(DESTDIR)$(prefix)/README
	$(install_sh) -c README.ja $(DESTDIR)$(prefix)/README.ja
install-all: install-strip install-run-enju
install-all-nostrip: install install-run-enju

.PHONY: parser mayz tagger install-run-enju install-all

######################################################################

$(DATA_DIR)/wsj02-21.mrg:
	cat $(WSJ_DIR)/0[2-9]/*.mrg $(WSJ_DIR)/1?/*.mrg $(WSJ_DIR)/2[0-1]/*.mrg > $@
$(DATA_DIR)/wsj%.mrg:
	cat $(WSJ_DIR)/$*/*.mrg > $@

$(DATA_DIR)/genia0001-1600.trees:
	$(PERL) enju-devel/genia-xml2trees.prl $(GENIA_DIR) 0001-1600 > $@
$(DATA_DIR)/genia%.trees:
	$(PERL) enju-devel/genia-xml2trees.prl $(GENIA_DIR) $* > $@

$(DATA_DIR)/brown-all.mrg:
	cat $(BROWN_DIR)/*/*.mrg > $@
$(DATA_DIR)/brown-train.trees: $(DATA_DIR)/brown-all.trees enju-devel/brown-treesclip.prl
	$(PERL) enju-devel/brown-treesclip.prl $< 10 1-8 > $@
$(DATA_DIR)/brown-devtest.trees: $(DATA_DIR)/brown-all.trees enju-devel/brown-treesclip.prl
	$(PERL) enju-devel/brown-treesclip.prl $< 10 9-9 > $@
$(DATA_DIR)/brown-eval.trees: $(DATA_DIR)/brown-all.trees enju-devel/brown-treesclip.prl
	$(PERL) enju-devel/brown-treesclip.prl $< 10 0-0 > $@

$(DATA_DIR)/gtrec.trees: enju-devel/gtrec-xml2trees.prl
	$(PERL) enju-devel/gtrec-xml2trees.prl $(GTREC_DIR)/parsed_gtrec.xml > $@
$(DATA_DIR)/brown-all-imperatives.trees $(DATA_DIR)/brown-all-questions.trees: $(DATA_DIR)/brown-all.trees enju-devel/brown-extractIQ.prl
	$(PERL) enju-devel/brown-extractIQ.prl $(DATA_DIR)/brown-all.trees $(DATA_DIR)/brown-all-imperatives.trees $(DATA_DIR)/brown-all-questions.trees
$(DATA_DIR)/iq-train.trees: $(DATA_DIR)/gtrec.trees $(DATA_DIR)/brown-all-imperatives.trees $(DATA_DIR)/brown-all-questions.trees
	cat $(DATA_DIR)/gtrec.trees $(DATA_DIR)/brown-all-imperatives.trees $(DATA_DIR)/brown-all-questions.trees > $(DATA_DIR)/iq-train.trees

%.trees: %.mrg enju-devel/mrg2trees.prl
	$(PERL) enju-devel/mrg2trees.prl < $< > $@

%.raw: %.trees enju-devel/trees2raw.prl
	$(PERL) enju-devel/trees2raw.prl < $< > $@
%.tagged: %.trees enju-devel/trees2tagged.prl
	$(PERL) enju-devel/trees2tagged.prl < $< > $@
%.bracketed: %.trees enju-devel/trees2bracketed.prl
	$(PERL) enju-devel/trees2bracketed.prl < $< > $@

######################################################################

@WITH_ENJU_GRAMMAR_TRUE@$(DICT):
@WITH_ENJU_GRAMMAR_TRUE@	$(mkinstalldirs) $(DATA_DIR)
@WITH_ENJU_GRAMMAR_TRUE@	cp $(WORDNET) $(DATA_DIR)

@WITH_ENJU_GRAMMAR_TRUE@$(DATA_DIR)/%.treebank: enju-devel/transmain.lil $(DICT) $(DATA_DIR)/%.trees
@WITH_ENJU_GRAMMAR_TRUE@	env LILFES_PATH=.:ll $(MAYZ_DIR)/treetrans enju-devel/transmain.lil $(DATA_DIR)/$*.trees $@

@WITH_ENJU_GRAMMAR_TRUE@%.derivbank %.lexicon %.templates: %.treebank enju-devel/invschema.lil enju-devel/invlexrule.lil enju-devel/lexabstract.lil enju-devel/lextemplate.lil enju-devel/makesem.lil enju-devel/lexextract.lil enju-devel/lexrule.lil enju-devel/lexcommon.lil
@WITH_ENJU_GRAMMAR_TRUE@	env LILFES_PATH=.:ll $(MAYZ_DIR)/lexextract enju-devel/lexextract.lil $*.treebank $*.derivbank $*.lexicon $*.templates

@WITH_ENJU_GRAMMAR_TRUE@$(LEXICON) $(TEMPLATES): $(DATA_DIR)/$(CORPUS_NAME).lexicon $(DATA_DIR)/$(CORPUS_NAME).templates enju-devel/lexrefine.lil enju-devel/lexrule.lil
@WITH_ENJU_GRAMMAR_TRUE@	env LILFES_PATH=.:ll $(MAYZ_DIR)/lexrefine -wf $(WORD_THRESHOLD) -tf $(TEMPLATE_THRESHOLD) -uwf $(UNKNOWN_WORD_THRESHOLD) -utf $(UNKNOWN_WORD_TEMPLATE_THRESHOLD) enju-devel/lexrefine.lil $(DATA_DIR)/$(CORPUS_NAME).lexicon $(DATA_DIR)/$(CORPUS_NAME).templates $(LEXICON) $(TEMPLATES)

@WITH_ENJU_GRAMMAR_TRUE@%.lexseq: %.derivbank $(LEXICON) $(TEMPLATES)
@WITH_ENJU_GRAMMAR_TRUE@	env LILFES_PATH=.:ll $(LILFES) -l enju/grammar -l mayz/deriv2lexseq -e ':- run("$(LEXICON)", "$(TEMPLATES)", "$<").' > $@

@WITH_ENJU_GRAMMAR_TRUE@%-uni.uevent.gz: %.lexseq $(LEXICON) enju/enju-super.conf
@WITH_ENJU_GRAMMAR_TRUE@	env LILFES_PATH=.:ll $(MAYZ_DIR)/unimaker enju/enju-super.conf $(LEXICON) $*.lexseq 6 $@

@WITH_ENJU_GRAMMAR_TRUE@%-lex.count.gz %-lex.model.gz %-lex.event.gz: %-uni.uevent.gz enju/enju-super.conf
@WITH_ENJU_GRAMMAR_TRUE@	env LILFES_PATH=.:ll $(MAYZ_DIR)/amisfilter -fm -t $(LEXFEATURE_THRESHOLD) hpsg-uni enju/enju-super.conf $*-uni.uevent.gz $*-lex.count.gz $*-lex.model.gz $*-lex.event.gz

@WITH_ENJU_GRAMMAR_TRUE@$(DATA_DIR)/$(GRAMMAR_NAME)-lex.output.gz: $(DATA_DIR)/$(CORPUS_NAME)-lex.model.gz $(DATA_DIR)/$(CORPUS_NAME)-lex.event.gz enju-devel/lexmodel.conf
@WITH_ENJU_GRAMMAR_TRUE@	$(AMIS) enju-devel/lexmodel.conf -m $(DATA_DIR)/$(CORPUS_NAME)-lex.model.gz -e $(DATA_DIR)/$(CORPUS_NAME)-lex.event.gz -o $(DATA_DIR)/$(GRAMMAR_NAME)-lex.output.gz -l $(DATA_DIR)/$(CORPUS_NAME)-lex.log

@WITH_ENJU_GRAMMAR_TRUE@%-forest.uevent.gz %-forest.ref: %.derivbank $(DATA_DIR)/$(GRAMMAR_NAME)-lex.output.gz $(LEXICON) $(TEMPLATES) enju/forestevent.lil enju-devel/forestmake.lil
@WITH_ENJU_GRAMMAR_TRUE@	env LILFES_PATH=.:ll $(MAYZ_DIR)/forestmaker -r $*-forest.ref hpsg-forest enju-devel/forestmake.lil $*.derivbank $*-forest.uevent.gz $(LEXICON) enju/enju-super.conf $(DATA_DIR)/$(GRAMMAR_NAME)-lex.output.gz

@WITH_ENJU_GRAMMAR_TRUE@%-syn.count.gz %-syn.model.gz %-syn.event.gz: %-forest.uevent.gz enju/synmask.lil
@WITH_ENJU_GRAMMAR_TRUE@	env LILFES_PATH=.:ll $(MAYZ_DIR)/amisfilter -t $(FOREST_FEATURE_THRESHOLD) hpsg-forest enju/synmask.lil $*-forest.uevent.gz $*-syn.count.gz $*-syn.model.gz $*-syn.event.gz

@WITH_ENJU_GRAMMAR_TRUE@$(DATA_DIR)/$(GRAMMAR_NAME)-syn.output.gz: $(DATA_DIR)/$(CORPUS_NAME)-syn.model.gz $(DATA_DIR)/$(CORPUS_NAME)-syn.event.gz enju-devel/synmodel.conf $(DATA_DIR)/$(CORPUS_NAME)-forest.ref
@WITH_ENJU_GRAMMAR_TRUE@	$(AMIS) enju-devel/synmodel.conf -m $(DATA_DIR)/$(CORPUS_NAME)-syn.model.gz -e $(DATA_DIR)/$(CORPUS_NAME)-syn.event.gz -o $(DATA_DIR)/$(GRAMMAR_NAME)-syn.output.gz -l $(DATA_DIR)/$(CORPUS_NAME)-syn.log --reference-file $(DATA_DIR)/$(CORPUS_NAME)-forest.ref $(EVENT_ON_FILE_OPTION)

@WITH_ENJU_GRAMMAR_TRUE@%.dep: %.derivbank enju-devel/derivtodep.lil
@WITH_ENJU_GRAMMAR_TRUE@	env LILFES_PATH=.:ll $(LILFES) -l enju-devel/derivtodep -e ':- derivation_to_dependencies("$<", "$@").'

######################################################################

@WITH_DOMAIN_ADAPTATION_TRUE@%.adapt-lexicon %.adapt-templates: %.lexicon %.templates $(DATA_DIR)/$(CORPUS_NAME).lexicon $(DATA_DIR)/$(CORPUS_NAME).templates
@WITH_DOMAIN_ADAPTATION_TRUE@	env LILFES_PATH=.:ll $(MAYZ_DIR)/lexmerge enju-devel/lexmerge.lil $(DATA_DIR)/$(CORPUS_NAME).lexicon $(DATA_DIR)/$(CORPUS_NAME).templates $*.lexicon $*.templates $*.adapt-lexicon $*.adapt-templates

@WITH_DOMAIN_ADAPTATION_TRUE@$(ADAPT_LEXICON) $(ADAPT_TEMPLATES): $(DATA_DIR)/$(ADAPT_CORPUS_NAME).adapt-lexicon $(DATA_DIR)/$(ADAPT_CORPUS_NAME).adapt-templates enju-devel/lexrefine.lil enju-devel/lexrule.lil
@WITH_DOMAIN_ADAPTATION_TRUE@	env LILFES_PATH=.:ll $(MAYZ_DIR)/lexrefine -wf $(ADAPT_WORD_THRESHOLD) -tf $(ADAPT_TEMPLATE_THRESHOLD) -uwf $(ADAPT_UNKNOWN_WORD_THRESHOLD) -utf $(ADAPT_UNKNOWN_WORD_TEMPLATE_THRESHOLD) enju-devel/lexrefine.lil $(DATA_DIR)/$(ADAPT_CORPUS_NAME).adapt-lexicon $(DATA_DIR)/$(ADAPT_CORPUS_NAME).adapt-templates $(ADAPT_LEXICON) $(ADAPT_TEMPLATES)

@WITH_DOMAIN_ADAPTATION_TRUE@%.adapt-lexseq: %.derivbank $(ADAPT_LEXICON) $(ADAPT_TEMPLATES)
@WITH_DOMAIN_ADAPTATION_TRUE@	env LILFES_PATH=.:ll $(LILFES) -l enju/grammar -l mayz/deriv2lexseq -e ':- run("$(ADAPT_LEXICON)", "$(ADAPT_TEMPLATES)", "$<").' > $@

#%.adapt-lexseq: %.derivbank $(ADAPT_LEXICON) $(ADAPT_TEMPLATES) $(DATA_DIR)/$(CORPUS_NAME).lexseq
#	cat $(DATA_DIR)/$(CORPUS_NAME).lexseq > $@
#	$(LILFES) -l enju/grammar -l mayz/deriv2lexseq -e ':- run("$(ADAPT_LEXICON)", "$(ADAPT_TEMPLATES)", "$<").' >> $@

@WITH_DOMAIN_ADAPTATION_TRUE@%-adaptuni.uevent.gz: %.adapt-lexseq %.adapt-lexicon enju/enju-super.conf
@WITH_DOMAIN_ADAPTATION_TRUE@	env LILFES_PATH=.:ll $(MAYZ_DIR)/unimaker enju/enju-super.conf $(ADAPT_LEXICON) $*.adapt-lexseq 6 $@

@WITH_DOMAIN_ADAPTATION_TRUE@%-adaptlex.count.gz %-adaptlex.model.gz %-adaptlex.event.gz: %-adaptuni.uevent.gz enju/enju-super.conf
@WITH_DOMAIN_ADAPTATION_TRUE@	env LILFES_PATH=.:ll $(MAYZ_DIR)/amisfilter -fm -t $(ADAPT_LEXFEATURE_THRESHOLD) hpsg-uni enju/enju-super.conf $*-adaptuni.uevent.gz $*-adaptlex.count.gz $*-adaptlex.model.gz $*-adaptlex.event.gz

@WITH_DOMAIN_ADAPTATION_TRUE@$(DATA_DIR)/$(ADAPT_GRAMMAR_NAME)-adaptlex.output.gz: $(DATA_DIR)/$(ADAPT_CORPUS_NAME)-adaptlex.model.gz $(DATA_DIR)/$(ADAPT_CORPUS_NAME)-adaptlex.event.gz enju-devel/$(ADAPT_DOMAIN)-lexmodel.conf $(DATA_DIR)/$(GRAMMAR_NAME)-lex.output.gz enju-devel/refmake-uni.prl enju-devel/model-combine.prl
@WITH_DOMAIN_ADAPTATION_TRUE@	$(PERL) enju-devel/refmake-uni.prl $(DATA_DIR)/$(ADAPT_CORPUS_NAME)-adaptlex.event.gz $(DATA_DIR)/$(GRAMMAR_NAME)-lex.output.gz $(DATA_DIR)/$(ADAPT_CORPUS_NAME)-adaptuni.ref
@WITH_DOMAIN_ADAPTATION_TRUE@	$(AMIS) enju-devel/$(ADAPT_DOMAIN)-lexmodel.conf -m $(DATA_DIR)/$(ADAPT_CORPUS_NAME)-adaptlex.model.gz -e $(DATA_DIR)/$(ADAPT_CORPUS_NAME)-adaptlex.event.gz -o $(DATA_DIR)/$(ADAPT_CORPUS_NAME)-adaptlex.output.gz -l $(DATA_DIR)/$(ADAPT_CORPUS_NAME)-adaptlex.log --reference 1 --reference-file $(DATA_DIR)/$(ADAPT_CORPUS_NAME)-adaptuni.ref
@WITH_DOMAIN_ADAPTATION_TRUE@	$(PERL) enju-devel/model-combine.prl DATA/$(GRAMMAR_NAME)-lex.output.gz DATA/$(ADAPT_CORPUS_NAME)-adaptlex.output.gz DATA/$(ADAPT_GRAMMAR_NAME)-adaptlex.output.gz

#$(DATA_DIR)/$(ADAPT_GRAMMAR_NAME)-adaptlex.output.gz: $(DATA_DIR)/$(ADAPT_CORPUS_NAME)-adaptlex.model.gz $(DATA_DIR)/$(ADAPT_CORPUS_NAME)-adaptlex.event.gz enju-devel/lexmodel.conf
#	$(AMIS) enju-devel/lexmodel.conf -m $(DATA_DIR)/$(ADAPT_CORPUS_NAME)-adaptlex.model.gz -e $(DATA_DIR)/$(ADAPT_CORPUS_NAME)-adaptlex.event.gz -o $(DATA_DIR)/$(ADAPT_GRAMMAR_NAME)-adaptlex.output.gz -l $(DATA_DIR)/$(ADAPT_CORPUS_NAME)-adaptlex.log

@WITH_DOMAIN_ADAPTATION_TRUE@%-adaptforest.uevent.gz %-adaptforest.ref: %.derivbank $(DATA_DIR)/$(ADAPT_GRAMMAR_NAME)-adaptlex.output.gz $(ADAPT_LEXICON) $(ADAPT_TEMPLATES) enju/genia-forestevent.lil enju-devel/$(ADAPT_DOMAIN)-forestmake.lil $(DATA_DIR)/$(GRAMMAR_NAME)-syn.output.gz
@WITH_DOMAIN_ADAPTATION_TRUE@	env LILFES_PATH=.:ll $(MAYZ_DIR)/forestmaker -r $*-adaptforest.ref genia-forest enju-devel/$(ADAPT_DOMAIN)-forestmake.lil $*.derivbank $*-adaptforest.uevent.gz $(ADAPT_LEXICON) enju/enju-super.conf $(DATA_DIR)/$(ADAPT_GRAMMAR_NAME)-adaptlex.output.gz

@WITH_DOMAIN_ADAPTATION_TRUE@%-adaptsyn.count.gz %-adaptsyn.model.gz %-adaptsyn.event.gz: %-adaptforest.uevent.gz enju/genia-synmask.lil
@WITH_DOMAIN_ADAPTATION_TRUE@	env LILFES_PATH=.:ll $(MAYZ_DIR)/amisfilter -t $(ADAPT_FOREST_FEATURE_THRESHOLD) genia-forest enju/genia-synmask.lil $*-adaptforest.uevent.gz $*-adaptsyn.count.gz $*-adaptsyn.model.gz $*-adaptsyn.event.gz

#$(DATA_DIR)/$(ADAPT_GRAMMAR_NAME)-adaptsyn.output.gz: $(DATA_DIR)/$(ADAPT_CORPUS_NAME)-adaptsyn.model.gz $(DATA_DIR)/$(ADAPT_CORPUS_NAME)-adaptsyn.event.gz enju-devel/$(ADAPT_DOMAIN)-synmodel.conf $(DATA_DIR)/$(ADAPT_CORPUS_NAME)-adaptforest.ref
#	$(AMIS) enju-devel/$(ADAPT_DOMAIN)-synmodel.conf -m $(DATA_DIR)/$(ADAPT_CORPUS_NAME)-adaptsyn.model.gz -e $(DATA_DIR)/$(ADAPT_CORPUS_NAME)-adaptsyn.event.gz -o $(DATA_DIR)/$(ADAPT_GRAMMAR_NAME)-adaptsyn.output.gz -l $(DATA_DIR)/$(ADAPT_CORPUS_NAME)-adaptsyn.log --reference-file $(DATA_DIR)/$(ADAPT_CORPUS_NAME)-adaptforest.ref $(EVENT_ON_FILE_OPTION)

@WITH_DOMAIN_ADAPTATION_TRUE@$(DATA_DIR)/$(ADAPT_GRAMMAR_NAME)-adaptsyn.output.gz: $(DATA_DIR)/$(ADAPT_CORPUS_NAME)-adaptsyn.model.gz $(DATA_DIR)/$(ADAPT_CORPUS_NAME)-adaptsyn.event.gz enju-devel/$(ADAPT_DOMAIN)-synmodel.conf $(DATA_DIR)/$(ADAPT_CORPUS_NAME)-adaptforest.ref $(DATA_DIR)/$(GRAMMAR_NAME)-syn.output.gz enju-devel/model-combine.prl
@WITH_DOMAIN_ADAPTATION_TRUE@	$(AMIS) enju-devel/$(ADAPT_DOMAIN)-synmodel.conf -m $(DATA_DIR)/$(ADAPT_CORPUS_NAME)-adaptsyn.model.gz -e $(DATA_DIR)/$(ADAPT_CORPUS_NAME)-adaptsyn.event.gz -o $(DATA_DIR)/$(ADAPT_CORPUS_NAME)-adaptsyn.output.gz -l $(DATA_DIR)/$(ADAPT_CORPUS_NAME)-adaptsyn.log --reference-file $(DATA_DIR)/$(ADAPT_CORPUS_NAME)-adaptforest.ref $(EVENT_ON_FILE_OPTION)
@WITH_DOMAIN_ADAPTATION_TRUE@	$(PERL) enju-devel/model-combine.prl $(DATA_DIR)/$(GRAMMAR_NAME)-syn.output.gz $(DATA_DIR)/$(ADAPT_CORPUS_NAME)-adaptsyn.output.gz $(DATA_DIR)/$(ADAPT_GRAMMAR_NAME)-adaptsyn.output.gz

@WITH_DOMAIN_ADAPTATION_TRUE@$(DATA_DIR)/$(GENIA_CORPUS_NAME)%$(ADAPT_DOMAIN):
@WITH_DOMAIN_ADAPTATION_TRUE@	$(MAKE) $@ ADAPT_DOMAIN=$(GENIA_DOMAIN) ADAPT_CORPUS_NAME=$(GENIA_CORPUS_NAME) ADAPT_GRAMMAR_NAME=$(GENIA_GRAMMAR_NAME)
@WITH_DOMAIN_ADAPTATION_TRUE@$(DATA_DIR)/$(GENIA_GRAMMAR_NAME)%$(ADAPT_DOMAIN):
@WITH_DOMAIN_ADAPTATION_TRUE@	$(MAKE) $@ ADAPT_DOMAIN=$(GENIA_DOMAIN) ADAPT_CORPUS_NAME=$(GENIA_CORPUS_NAME) ADAPT_GRAMMAR_NAME=$(GENIA_GRAMMAR_NAME)
@WITH_DOMAIN_ADAPTATION_TRUE@$(DATA_DIR)/mogura-$(GENIA_GRAMMAR_NAME)%$(ADAPT_DOMAIN):
@WITH_DOMAIN_ADAPTATION_TRUE@	$(MAKE) $@ ADAPT_DOMAIN=$(GENIA_DOMAIN) ADAPT_CORPUS_NAME=$(GENIA_CORPUS_NAME) ADAPT_GRAMMAR_NAME=$(GENIA_GRAMMAR_NAME)
@WITH_DOMAIN_ADAPTATION_TRUE@eval-$(GENIA_DOMAIN)-%$(ADAPT_DOMAIN):
@WITH_DOMAIN_ADAPTATION_TRUE@	$(MAKE) $@ ADAPT_DOMAIN=$(GENIA_DOMAIN) ADAPT_CORPUS_NAME=$(GENIA_CORPUS_NAME) ADAPT_GRAMMAR_NAME=$(GENIA_GRAMMAR_NAME)
@WITH_DOMAIN_ADAPTATION_TRUE@$(DATA_DIR)/$(BROWN_CORPUS_NAME)%$(ADAPT_DOMAIN):
@WITH_DOMAIN_ADAPTATION_TRUE@	$(MAKE) $@ ADAPT_DOMAIN=$(BROWN_DOMAIN) ADAPT_CORPUS_NAME=$(BROWN_CORPUS_NAME) ADAPT_GRAMMAR_NAME=$(BROWN_GRAMMAR_NAME)
@WITH_DOMAIN_ADAPTATION_TRUE@$(DATA_DIR)/$(BROWN_GRAMMAR_NAME)%$(ADAPT_DOMAIN):
@WITH_DOMAIN_ADAPTATION_TRUE@	$(MAKE) $@ ADAPT_DOMAIN=$(BROWN_DOMAIN) ADAPT_CORPUS_NAME=$(BROWN_CORPUS_NAME) ADAPT_GRAMMAR_NAME=$(BROWN_GRAMMAR_NAME)
@WITH_DOMAIN_ADAPTATION_TRUE@$(DATA_DIR)/mogura-$(BROWN_GRAMMAR_NAME)%$(ADAPT_DOMAIN):
@WITH_DOMAIN_ADAPTATION_TRUE@	$(MAKE) $@ ADAPT_DOMAIN=$(BROWN_DOMAIN) ADAPT_CORPUS_NAME=$(BROWN_CORPUS_NAME) ADAPT_GRAMMAR_NAME=$(BROWN_GRAMMAR_NAME)
@WITH_DOMAIN_ADAPTATION_TRUE@eval-$(BROWN_DOMAIN)-%$(ADAPT_DOMAIN):
@WITH_DOMAIN_ADAPTATION_TRUE@	$(MAKE) $@ ADAPT_DOMAIN=$(BROWN_DOMAIN) ADAPT_CORPUS_NAME=$(BROWN_CORPUS_NAME) ADAPT_GRAMMAR_NAME=$(BROWN_GRAMMAR_NAME)
@WITH_DOMAIN_ADAPTATION_TRUE@$(DATA_DIR)/$(IQ_CORPUS_NAME)%$(ADAPT_DOMAIN):
@WITH_DOMAIN_ADAPTATION_TRUE@	$(MAKE) $@ ADAPT_DOMAIN=$(IQ_DOMAIN) ADAPT_CORPUS_NAME=$(IQ_CORPUS_NAME) ADAPT_GRAMMAR_NAME=$(IQ_GRAMMAR_NAME)
@WITH_DOMAIN_ADAPTATION_TRUE@$(DATA_DIR)/$(IQ_GRAMMAR_NAME)%$(ADAPT_DOMAIN):
@WITH_DOMAIN_ADAPTATION_TRUE@	$(MAKE) $@ ADAPT_DOMAIN=$(IQ_DOMAIN) ADAPT_CORPUS_NAME=$(IQ_CORPUS_NAME) ADAPT_GRAMMAR_NAME=$(IQ_GRAMMAR_NAME)
@WITH_DOMAIN_ADAPTATION_TRUE@$(DATA_DIR)/mogura-$(IQ_GRAMMAR_NAME)%$(ADAPT_DOMAIN):
@WITH_DOMAIN_ADAPTATION_TRUE@	$(MAKE) $@ ADAPT_DOMAIN=$(IQ_DOMAIN) ADAPT_CORPUS_NAME=$(IQ_CORPUS_NAME) ADAPT_GRAMMAR_NAME=$(IQ_GRAMMAR_NAME)
@WITH_DOMAIN_ADAPTATION_TRUE@eval-$(IQ_DOMAIN)-%$(ADAPT_DOMAIN):
@WITH_DOMAIN_ADAPTATION_TRUE@	$(MAKE) $@ ADAPT_DOMAIN=$(IQ_DOMAIN) ADAPT_CORPUS_NAME=$(IQ_CORPUS_NAME) ADAPT_GRAMMAR_NAME=$(IQ_GRAMMAR_NAME)

######################################################################

$(ADAPT_DERIVBANK).xml.gz: $(ADAPT_DERIVBANK) $(ADAPT_LEXICON) $(ADAPT_TEMPLATES)
	env LILFES_PATH=.:ll $(ENJU_BIN) -g enju/$(ADAPT_DOMAIN)-grammar -f enju-devel/emptymodel \
		-t cat -m cat \
		--super-lexicon $(ADAPT_LEXICON) \
		--super-model enju/enju-super.conf \
		--super-param /dev/null \
		-l enju-devel/derivtoxml.lil -e 'derivation_to_xml("$(ADAPT_DERIVBANK)")' | gzip -c > $@

%.derivbank.xml.gz: %.derivbank $(LEXICON) $(TEMPLATES)
	env LILFES_PATH=.:ll $(ENJU_BIN) -g enju/grammar -f enju-devel/emptymodel \
		-t cat -m cat \
		--super-lexicon $(LEXICON) \
		--super-model enju/enju-super.conf \
		--super-param /dev/null \
		-l enju-devel/derivtoxml.lil -e 'derivation_to_xml("$*.derivbank")' | gzip -c > $@

######################################################################

@WITH_MOGURA_DATA_TRUE@%.cfg: %.cfg-src.gz
@WITH_MOGURA_DATA_TRUE@	$(MOGURA_TOOL_DIR)/remove_useless_symbols $^ | $(MOGURA_TOOL_DIR)/pack_cfg_file > $@

@WITH_ENJU_GRAMMAR_TRUE@@WITH_MOGURA_DATA_TRUE@$(MOGURA_CFG)-src.gz: $(TEMPLATES) $(DERIVBANK)
@WITH_ENJU_GRAMMAR_TRUE@@WITH_MOGURA_DATA_TRUE@	env LILFES_PATH=.:ll $(MOGURA_TOOL_DIR)/cfg_compile mogura-devel/restriction $(TEMPLATES) | gzip -c > $@

@WITH_ENJU_GRAMMAR_TRUE@@WITH_MOGURA_DATA_TRUE@$(MOGURA_R_CFG)-src.gz: $(TEMPLATES) $(DERIVBANK)
@WITH_ENJU_GRAMMAR_TRUE@@WITH_MOGURA_DATA_TRUE@	env LILFES_PATH=.:ll $(MOGURA_TOOL_DIR)/cfg_compile mogura-devel/restriction $(TEMPLATES) -d 4 $(DERIVBANK) | gzip -c > $@

@WITH_DOMAIN_ADAPTATION_TRUE@@WITH_MOGURA_DATA_TRUE@$(MOGURA_ADAPT_CFG)-src.gz: $(ADAPT_TEMPLATES) $(DERIVBANK) $(ADAPT_DERIVBANK)
@WITH_DOMAIN_ADAPTATION_TRUE@@WITH_MOGURA_DATA_TRUE@	env LILFES_PATH=.:ll $(MOGURA_TOOL_DIR)/cfg_compile mogura-devel/restriction $(ADAPT_TEMPLATES) | gzip -c > $@

@WITH_DOMAIN_ADAPTATION_TRUE@@WITH_MOGURA_DATA_TRUE@$(MOGURA_ADAPT_R_CFG)-src.gz: $(ADAPT_TEMPLATES) $(DERIVBANK) $(ADAPT_DERIVBANK)
@WITH_DOMAIN_ADAPTATION_TRUE@@WITH_MOGURA_DATA_TRUE@	 env LILFES_PATH=.:ll $(MOGURA_TOOL_DIR)/cfg_compile mogura-devel/restriction $(ADAPT_TEMPLATES) -d 4 $(ADAPT_DERIVBANK) $(DERIVBANK) | gzip -c > $@

######################################################################

@WITH_ENJU_GRAMMAR_TRUE@@WITH_MOGURA_DATA_TRUE@$(MOGURA_MODEL): $(DATA_DIR)/mogura.event.gz
@WITH_ENJU_GRAMMAR_TRUE@@WITH_MOGURA_DATA_TRUE@	$(MOGURA_TOOL_DIR)/train 3 3 $(DATA_DIR)/mogura.event.gz $@

@WITH_ENJU_GRAMMAR_TRUE@@WITH_MOGURA_DATA_TRUE@$(DATA_DIR)/mogura.event.gz: $(DERIVBANK) $(MOGURA_CFG_FILES)
@WITH_ENJU_GRAMMAR_TRUE@@WITH_MOGURA_DATA_TRUE@	env LILFES_PATH=.:ll $(MOGURA_TOOL_DIR)/extract_event mogura-devel/train $(DERIVBANK) $@

######################################################################

@WITH_ENJU2PTB_TRUE@@WITH_ENJU_GRAMMAR_TRUE@$(DATA_DIR)/%.conv-grammar:
@WITH_ENJU2PTB_TRUE@@WITH_ENJU_GRAMMAR_TRUE@	$(MAKE) -C enju2ptb ../$@

######################################################################

eval-coverage-%: $(LEXICON) $(TEMPLATES) $(DATA_DIR)/%.derivbank
	env LILFES_PATH=.:ll $(LILFES) -l enju/grammar -l mayz/coverage -e '?- eval_coverage("$(DATA_DIR)/$*.derivbank", "$(LEXICON)", "$(TEMPLATES)", "eval-coverage-$*").'

eval-syn-%-autopos: $(FOMMODEL) parser tagger $(DATA_DIR)/%.raw $(DATA_DIR)/%.dep
	env LILFES_PATH=.:ll $(ENJU_BIN) -A -m "./enju-src/enju-morph -s ./DATA" -t "$(TAGGER_DIR)/stepp -e -p -m $(TAGGER_DIR)/models_wsj02-21c" --super-model enju/enju-super.conf --super-param $(DATA_DIR)/$(GRAMMAR_NAME)-lex.output.gz --super-lexicon $(LEXICON) -f enju/synmodel -l enju/outputdep -e output_dependency_file < $(DATA_DIR)/$*.raw > eval-syn-$*-autopos.dep
	$(PERL) enju-devel/evaldep.prl $(DATA_DIR)/$*.dep eval-syn-$*-autopos.dep > eval-syn-$*-autopos

eval-syn-%: $(FOMMODEL) parser $(DATA_DIR)/%.tagged $(DATA_DIR)/%.dep
	env LILFES_PATH=.:ll $(ENJU_BIN) -m "./enju-src/enju-morph -s ./DATA" -nt --super-model enju/enju-super.conf --super-param $(DATA_DIR)/$(GRAMMAR_NAME)-lex.output.gz --super-lexicon $(LEXICON) -f enju/synmodel -l enju/outputdep -e output_dependency_file < $(DATA_DIR)/$*.tagged > eval-syn-$*.dep
	$(PERL) enju-devel/evaldep.prl $(DATA_DIR)/$*.dep eval-syn-$*.dep > eval-syn-$*

eval-$(ADAPT_DOMAIN)-coverage-%: $(DATA_DIR)/%.derivbank $(ADAPT_LEXICON) $(ADAPT_TEMPLATES)
	env LILFES_PATH=.:ll $(LILFES) -l enju/$(ADAPT_DOMAIN)-grammar -l mayz/coverage -e '?- eval_coverage("$(DATA_DIR)/$*.derivbank", "$(ADAPT_LEXICON)", "$(ADAPT_TEMPLATES)", "eval-$(ADAPT_DOMAIN)-coverage-$*").'

eval-genia-syn-%-autopos: $(GENIA_FOMMODEL) parser tagger $(DATA_DIR)/%.raw $(DATA_DIR)/%.dep
	env LILFES_PATH=.:ll $(ENJU_BIN) -A -m "./enju-src/enju-morph -s ./DATA" -t "$(TAGGER_DIR)/stepp -e -p -m $(TAGGER_DIR)/models_medline" --super-model enju/enju-super.conf --super-param $(DATA_DIR)/$(GENIA_GRAMMAR_NAME)-adaptlex.output.gz --super-lexicon $(GENIA_LEXICON) -g enju/genia-grammar -f enju/genia-synmodel -l enju/outputdep -e output_dependency_file < $(DATA_DIR)/$*.raw > eval-genia-syn-$*-autopos.dep
	$(PERL) enju-devel/evaldep.prl $(DATA_DIR)/$*.dep eval-genia-syn-$*-autopos.dep > eval-genia-syn-$*-autopos

eval-brown-syn-%-autopos: $(BROWN_FOMMODEL) parser tagger $(DATA_DIR)/%.raw $(DATA_DIR)/%.dep
	env LILFES_PATH=.:ll $(ENJU_BIN) -A -m "./enju-src/enju-morph -s ./DATA" -t "$(TAGGER_DIR)/stepp -e -p -m $(TAGGER_DIR)/models_brown-wsj02-21c" --super-model enju/enju-super.conf --super-param $(DATA_DIR)/$(BROWN_GRAMMAR_NAME)-adaptlex.output.gz --super-lexicon $(BROWN_LEXICON) -g enju/brown-grammar -f enju/brown-synmodel -l enju/outputdep -e output_dependency_file < $(DATA_DIR)/$*.raw > eval-brown-syn-$*-autopos.dep
	$(PERL) enju-devel/evaldep.prl $(DATA_DIR)/$*.dep eval-brown-syn-$*-autopos.dep > eval-brown-syn-$*-autopos

eval-iq-syn-%-autopos: $(IQ_FOMMODEL) parser tagger $(DATA_DIR)/%.raw $(DATA_DIR)/%.dep
	env LILFES_PATH=.:ll $(ENJU_BIN) -A -m "./enju-src/enju-morph -s ./DATA" -t "$(TAGGER_DIR)/stepp -e -p -m $(TAGGER_DIR)/models_wsj02-21-IQc" --super-model enju/enju-super.conf --super-param $(DATA_DIR)/$(IQ_GRAMMAR_NAME)-adaptlex.output.gz --super-lexicon $(IQ_LEXICON) -g enju/iq-grammar -f enju/iq-synmodel -l enju/outputdep -e output_dependency_file < $(DATA_DIR)/$*.raw > eval-iq-syn-$*-autopos.dep
	$(PERL) enju-devel/evaldep.prl $(DATA_DIR)/$*.dep eval-iq-syn-$*-autopos.dep > eval-iq-syn-$*-autopos

# eval-$(ADAPT_DOMAIN)-syn-%-autopos: $(ADAPT_FOMMODEL) parser tagger $(DATA_DIR)/%.raw $(DATA_DIR)/%.dep
# 	$(ENJU_BIN) -A -m "./enju-src/enju-morph -s ./DATA" -t "$(TAGGER_DIR)/stepp -e -p -m $(TAGGER_DIR)/models_wsj02-21c" --super-model enju/enju-super.conf --super-param $(DATA_DIR)/$(ADAPT_GRAMMAR_NAME)-adaptlex.output.gz --super-lexicon $(ADAPT_LEXICON) -g enju/$(ADAPT_DOMAIN)-grammar -f enju/$(ADAPT_DOMAIN)-synmodel -l enju/outputdep -e output_dependency_file < $(DATA_DIR)/$*.raw > eval-$(ADAPT_DOMAIN)-syn-$*-autopos.dep
# 	$(PERL) enju-devel/evaldep.prl $(DATA_DIR)/$*.dep eval-$(ADAPT_DOMAIN)-syn-$*-autopos.dep > eval-$(ADAPT_DOMAIN)-syn-$*-autopos

eval-$(ADAPT_DOMAIN)-syn-%: $(ADAPT_FOMMODEL) parser $(DATA_DIR)/%.tagged $(DATA_DIR)/%.dep
	env LILFES_PATH=.:ll $(ENJU_BIN) -m "./enju-src/enju-morph -s ./DATA" -nt --super-model enju/enju-super.conf --super-param $(DATA_DIR)/$(ADAPT_GRAMMAR_NAME)-adaptlex.output.gz --super-lexicon $(ADAPT_LEXICON) -g enju/$(ADAPT_DOMAIN)-grammar -f enju/$(ADAPT_DOMAIN)-synmodel -l enju/outputdep -e output_dependency_file < $(DATA_DIR)/$*.tagged > eval-$(ADAPT_DOMAIN)-syn-$*.dep
	$(PERL) enju-devel/evaldep.prl $(DATA_DIR)/$*.dep eval-$(ADAPT_DOMAIN)-syn-$*.dep > eval-$(ADAPT_DOMAIN)-syn-$*

######################################################################

html: $(LEXICON) $(TEMPLATES) mayz
	env LILFES_PATH=.:ll $(MAYZ_DIR)/lex2html -c enju-devel/fs.css -x enju-devel/fs.xsl -d $(DATA_DIR) enju/grammar $(LEXICON) $(TEMPLATES) $(DATA_DIR)/$(CORPUS_NAME).lexseq $(CORPUS_NAME)

# genia-html: $(MIXTURE_LEXICON) $(MIXTURE_TEMPLATES) mayz
# 	lex2html -c enju-devel/fs.css -x enju-devel/fs.xsl -d $(DATA_DIR) enju/genia-grammar $(MIXTURE_LEXICON) $(MIXTURE_TEMPLATES) $(MIXTURE_LEXBANK) $(MIXTURE_CORPUS_NAME)

# %.html: %.err enju-devel/err2html.prl
# 	$(PERL) enju-devel/err2html.prl $< > $@

######################################################################

.PHONY: eval-coverage-% eval-syn-%-autopos eval-syn-% \
        eval-$(ADAPT_DOMAIN)-covearge-% eval-$(ADAPT_DOMAIN)-syn-%-autopos eval-$(ADAPT_DOMAIN)-syn-% \
        eval-genia-syn-%-autopos eval-brown-syn-%-autopos eval-iq-syn-%-autopos

.PRECIOUS: $(DATA_DIR)/wsj%.mrg $(DATA_DIR)/genia%.trees %.trees %.raw %.tagged %.bracketed \
           $(DATA_DIR)/%.treebank \
           %.derivbank %.lexicon %.templates %.lexseq \
           %-uni.uevent.gz %-lex.count.gz %-lex.model.gz %-lex.event.gz \
           %-forest.uevent.gz %-forest.ref \
           %-syn.count.gz %-syn.model.gz %-syn.event.gz \
           %.dep \
           %.adapt-lexicon %.adapt-templates %.adapt-lexseq \
           %-adaptuni.uevent.gz %-adaptlex.count.gz %-adaptlex.model.gz %-adaptlex.event.gz \
           %-adaptforest.uevent.gz %-adaptforest.ref \
           %-adaptsyn.count.gz %-adaptsyn.model.gz %-adaptsyn.event.gz \
           %.cfg \
           $(DATA_DIR)/%.conv-grammar

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
