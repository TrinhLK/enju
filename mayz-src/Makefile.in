# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

###########################################################################
###
###  Copyright (c) 2005-2007, Tsujii Laboratory, The University of Tokyo.
###  All rights reserved.
###
###  Name: mayz-src/Makefile.am
###  Makefile for MAYZ toolkit
###
###########################################################################



VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
noinst_PROGRAMS = treetrans$(EXEEXT) lexextract$(EXEEXT) \
	lexrefine$(EXEEXT) lexmerge$(EXEEXT) unimaker$(EXEEXT) \
	forestmaker$(EXEEXT) amisfilter$(EXEEXT) up$(EXEEXT) \
	lex2html$(EXEEXT)
bin_PROGRAMS = super$(EXEEXT)
subdir = mayz-src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(noinst_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config_mayz.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
AM_V_AR = $(am__v_AR_@AM_V@)
am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libmayz_a_AR = $(AR) $(ARFLAGS)
libmayz_a_LIBADD =
am_libmayz_a_OBJECTS = AmisBuiltin.$(OBJEXT) AmisFilter.$(OBJEXT) \
	AmisModel.$(OBJEXT) DerivMaker.$(OBJEXT) Derivation.$(OBJEXT) \
	Derivbank.$(OBJEXT) ForestMaker.$(OBJEXT) \
	Initializer.$(OBJEXT) LexEntry.$(OBJEXT) \
	LexExtractor.$(OBJEXT) ParseTree.$(OBJEXT) \
	TemplateTable.$(OBJEXT) Tree.$(OBJEXT) TreeConverter.$(OBJEXT) \
	Treebank.$(OBJEXT) Word.$(OBJEXT)
libmayz_a_OBJECTS = $(am_libmayz_a_OBJECTS)
libup_a_AR = $(AR) $(ARFLAGS)
libup_a_LIBADD =
am_libup_a_OBJECTS = ParserBuiltin.$(OBJEXT) Qc.$(OBJEXT) \
	DataConv.$(OBJEXT) AmisModel.$(OBJEXT) AmisBuiltin.$(OBJEXT) \
	QuickCheck.$(OBJEXT)
libup_a_OBJECTS = $(am_libup_a_OBJECTS)
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_amisfilter_OBJECTS = AmisFilter.$(OBJEXT) AmisBuiltin.$(OBJEXT) \
	AmisModel.$(OBJEXT) Initializer.$(OBJEXT) \
	amisfilter_main.$(OBJEXT)
amisfilter_OBJECTS = $(am_amisfilter_OBJECTS)
amisfilter_DEPENDENCIES = @top_srcdir@/ll/src/liblilfes.a
am_forestmaker_OBJECTS = AmisModel.$(OBJEXT) AmisBuiltin.$(OBJEXT) \
	Derivation.$(OBJEXT) Derivbank.$(OBJEXT) ForestMaker.$(OBJEXT) \
	Initializer.$(OBJEXT) ParseTree.$(OBJEXT) Word.$(OBJEXT) \
	forestmaker_main.$(OBJEXT)
forestmaker_OBJECTS = $(am_forestmaker_OBJECTS)
forestmaker_DEPENDENCIES = libup.a @top_srcdir@/ll/src/liblilfes.a
am_lex2html_OBJECTS = Derivation.$(OBJEXT) LexEntry.$(OBJEXT) \
	TemplateTable.$(OBJEXT) Word.$(OBJEXT) lex2html_main.$(OBJEXT)
lex2html_OBJECTS = $(am_lex2html_OBJECTS)
lex2html_DEPENDENCIES = @top_srcdir@/ll/src/liblilfes.a
am_lexextract_OBJECTS = Derivation.$(OBJEXT) Derivbank.$(OBJEXT) \
	DerivMaker.$(OBJEXT) Initializer.$(OBJEXT) LexEntry.$(OBJEXT) \
	LexExtractor.$(OBJEXT) TemplateTable.$(OBJEXT) Tree.$(OBJEXT) \
	Treebank.$(OBJEXT) Word.$(OBJEXT) lexextract_main.$(OBJEXT)
lexextract_OBJECTS = $(am_lexextract_OBJECTS)
lexextract_DEPENDENCIES = @top_srcdir@/ll/src/liblilfes.a
am_lexmerge_OBJECTS = Initializer.$(OBJEXT) LexEntry.$(OBJEXT) \
	TemplateTable.$(OBJEXT) lexmerge_main.$(OBJEXT)
lexmerge_OBJECTS = $(am_lexmerge_OBJECTS)
lexmerge_DEPENDENCIES = @top_srcdir@/ll/src/liblilfes.a
am_lexrefine_OBJECTS = Initializer.$(OBJEXT) LexEntry.$(OBJEXT) \
	TemplateTable.$(OBJEXT) lexrefine_main.$(OBJEXT)
lexrefine_OBJECTS = $(am_lexrefine_OBJECTS)
lexrefine_DEPENDENCIES = @top_srcdir@/ll/src/liblilfes.a
am_super_OBJECTS = super_main.$(OBJEXT)
super_OBJECTS = $(am_super_OBJECTS)
super_DEPENDENCIES = libup.a @top_srcdir@/ll/src/liblilfes.a
am_treetrans_OBJECTS = Initializer.$(OBJEXT) Tree.$(OBJEXT) \
	Treebank.$(OBJEXT) TreeConverter.$(OBJEXT) Word.$(OBJEXT) \
	treetrans_main.$(OBJEXT)
treetrans_OBJECTS = $(am_treetrans_OBJECTS)
treetrans_DEPENDENCIES = @top_srcdir@/ll/src/liblilfes.a
am_unimaker_OBJECTS = unimaker_main.$(OBJEXT)
unimaker_OBJECTS = $(am_unimaker_OBJECTS)
unimaker_DEPENDENCIES = libup.a @top_srcdir@/ll/src/liblilfes.a
am__objects_1 = ParserBuiltin.$(OBJEXT) Qc.$(OBJEXT) \
	DataConv.$(OBJEXT) AmisModel.$(OBJEXT) AmisBuiltin.$(OBJEXT) \
	QuickCheck.$(OBJEXT)
am_up_OBJECTS = $(am__objects_1) up_main.$(OBJEXT)
up_OBJECTS = $(am_up_OBJECTS)
up_DEPENDENCIES = @top_srcdir@/ll/src/liblilfes.a
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libmayz_a_SOURCES) $(libup_a_SOURCES) \
	$(amisfilter_SOURCES) $(forestmaker_SOURCES) \
	$(lex2html_SOURCES) $(lexextract_SOURCES) $(lexmerge_SOURCES) \
	$(lexrefine_SOURCES) $(super_SOURCES) $(treetrans_SOURCES) \
	$(unimaker_SOURCES) $(up_SOURCES)
DIST_SOURCES = $(libmayz_a_SOURCES) $(libup_a_SOURCES) \
	$(amisfilter_SOURCES) $(forestmaker_SOURCES) \
	$(lex2html_SOURCES) $(lexextract_SOURCES) $(lexmerge_SOURCES) \
	$(lexrefine_SOURCES) $(super_SOURCES) $(treetrans_SOURCES) \
	$(unimaker_SOURCES) $(up_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config_mayz.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/config_mayz.h.in \
	$(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMIS = @AMIS@
AMTAR = @AMTAR@
AM_CXXFLAGS = @AM_CXXFLAGS@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
WL_NOWHOLE = @WL_NOWHOLE@
WL_WHOLE = @WL_WHOLE@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_CPPFLAGS = -I@top_srcdir@/ll/include
AM_LDFLAGS = -L. -L@top_srcdir@/ll/src #@AM_LDFLAGS@
noinst_LIBRARIES = libmayz.a libup.a
noinst_HEADERS = \
	mconfig.h \
	AmisBuiltin.h \
	AmisFilter.h \
	AmisModel.h \
	DataConv.h \
	DerivMaker.h \
	Derivation.h \
	Derivbank.h \
	Edge.h \
	Extent.h \
	FSArray.h \
	ForestMaker.h \
	Fs.h \
	Grammar.h \
	hashdef.h \
	Initializer.h \
	LexAnalyzer.h \
	LexAnalyzerBasic.h \
	LexAnalyzerLilfes.h \
	LexAnalyzerPipe.h \
	LexEntry.h \
	LexExtractor.h \
	LexiconTable.h \
	MorphAnalyzerExternal.h \
	ParseStatus.h \
	ParseTree.h \
	Parser.h \
	ParserBasic.h \
	ParserBuiltin.h \
	ParserCkyFom.h \
	PosTaggerExternal.h \
	Qc.h \
	QuickCheck.h \
	Supertagger.h \
	SupertaggerExternal.h \
	TaggedTokenSplitter.h \
	TemplateTable.h \
	Tree.h \
	TreeConverter.h \
	Treebank.h \
	Word.h \
	WordCounter.h \
	config_mayz.h \
	config_mayz_win.h \
	mayzutil.h \
	pvector.h

libmayz_a_SOURCES = \
	AmisBuiltin.cc \
	AmisFilter.cc \
	AmisModel.cc \
	DerivMaker.cc \
	Derivation.cc \
	Derivbank.cc \
	ForestMaker.cc \
	Initializer.cc \
	LexEntry.cc \
	LexExtractor.cc \
	ParseTree.cc \
	TemplateTable.cc \
	Tree.cc \
	TreeConverter.cc \
	Treebank.cc \
	Word.cc

#	WordCounter.cc
treetrans_LDADD = @top_srcdir@/ll/src/liblilfes.a
treetrans_SOURCES = \
	Initializer.cc \
	Tree.cc \
	Treebank.cc \
	TreeConverter.cc \
	Word.cc \
	treetrans_main.cc

lexextract_LDADD = @top_srcdir@/ll/src/liblilfes.a
lexextract_SOURCES = \
	Derivation.cc \
	Derivbank.cc \
	DerivMaker.cc \
	Initializer.cc \
	LexEntry.cc \
	LexExtractor.cc \
	TemplateTable.cc \
	Tree.cc \
	Treebank.cc \
	Word.cc \
	lexextract_main.cc

#	WordCounter.cc
lexrefine_LDADD = @top_srcdir@/ll/src/liblilfes.a
lexrefine_SOURCES = \
	Initializer.cc \
	LexEntry.cc \
	TemplateTable.cc \
	lexrefine_main.cc

lexmerge_LDADD = @top_srcdir@/ll/src/liblilfes.a
lexmerge_SOURCES = \
	Initializer.cc \
	LexEntry.cc \
	TemplateTable.cc \
	lexmerge_main.cc

unimaker_LDADD = libup.a @top_srcdir@/ll/src/liblilfes.a
unimaker_SOURCES = unimaker_main.cc
amisfilter_LDADD = @top_srcdir@/ll/src/liblilfes.a
amisfilter_SOURCES = \
	AmisFilter.cc \
	AmisBuiltin.cc \
	AmisModel.cc \
	Initializer.cc \
	amisfilter_main.cc

forestmaker_SOURCES = \
	AmisModel.cc \
	AmisBuiltin.cc \
	Derivation.cc \
	Derivbank.cc \
	ForestMaker.cc \
	Initializer.cc \
	ParseTree.cc \
	Word.cc \
	forestmaker_main.cc

forestmaker_LDADD = libup.a @top_srcdir@/ll/src/liblilfes.a
lex2html_LDADD = @top_srcdir@/ll/src/liblilfes.a
lex2html_SOURCES = \
	Derivation.cc \
	LexEntry.cc \
	TemplateTable.cc \
	Word.cc \
	lex2html_main.cc

libup_a_SOURCES = \
	ParserBuiltin.cc \
	Qc.cc \
	DataConv.cc \
	AmisModel.cc \
	AmisBuiltin.cc \
	QuickCheck.cc

up_LDADD = @top_srcdir@/ll/src/liblilfes.a
up_SOURCES = \
	$(libup_a_SOURCES) \
	up_main.cc

super_SOURCES = \
    super_main.cc

super_LDADD = libup.a @top_srcdir@/ll/src/liblilfes.a
all: config_mayz.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cc .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign mayz-src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign mayz-src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

config_mayz.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config_mayz.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status mayz-src/config_mayz.h
$(srcdir)/config_mayz.h.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config_mayz.h stamp-h1

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

libmayz.a: $(libmayz_a_OBJECTS) $(libmayz_a_DEPENDENCIES) $(EXTRA_libmayz_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libmayz.a
	$(AM_V_AR)$(libmayz_a_AR) libmayz.a $(libmayz_a_OBJECTS) $(libmayz_a_LIBADD)
	$(AM_V_at)$(RANLIB) libmayz.a

libup.a: $(libup_a_OBJECTS) $(libup_a_DEPENDENCIES) $(EXTRA_libup_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libup.a
	$(AM_V_AR)$(libup_a_AR) libup.a $(libup_a_OBJECTS) $(libup_a_LIBADD)
	$(AM_V_at)$(RANLIB) libup.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)

amisfilter$(EXEEXT): $(amisfilter_OBJECTS) $(amisfilter_DEPENDENCIES) $(EXTRA_amisfilter_DEPENDENCIES) 
	@rm -f amisfilter$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(amisfilter_OBJECTS) $(amisfilter_LDADD) $(LIBS)

forestmaker$(EXEEXT): $(forestmaker_OBJECTS) $(forestmaker_DEPENDENCIES) $(EXTRA_forestmaker_DEPENDENCIES) 
	@rm -f forestmaker$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(forestmaker_OBJECTS) $(forestmaker_LDADD) $(LIBS)

lex2html$(EXEEXT): $(lex2html_OBJECTS) $(lex2html_DEPENDENCIES) $(EXTRA_lex2html_DEPENDENCIES) 
	@rm -f lex2html$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(lex2html_OBJECTS) $(lex2html_LDADD) $(LIBS)

lexextract$(EXEEXT): $(lexextract_OBJECTS) $(lexextract_DEPENDENCIES) $(EXTRA_lexextract_DEPENDENCIES) 
	@rm -f lexextract$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(lexextract_OBJECTS) $(lexextract_LDADD) $(LIBS)

lexmerge$(EXEEXT): $(lexmerge_OBJECTS) $(lexmerge_DEPENDENCIES) $(EXTRA_lexmerge_DEPENDENCIES) 
	@rm -f lexmerge$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(lexmerge_OBJECTS) $(lexmerge_LDADD) $(LIBS)

lexrefine$(EXEEXT): $(lexrefine_OBJECTS) $(lexrefine_DEPENDENCIES) $(EXTRA_lexrefine_DEPENDENCIES) 
	@rm -f lexrefine$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(lexrefine_OBJECTS) $(lexrefine_LDADD) $(LIBS)

super$(EXEEXT): $(super_OBJECTS) $(super_DEPENDENCIES) $(EXTRA_super_DEPENDENCIES) 
	@rm -f super$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(super_OBJECTS) $(super_LDADD) $(LIBS)

treetrans$(EXEEXT): $(treetrans_OBJECTS) $(treetrans_DEPENDENCIES) $(EXTRA_treetrans_DEPENDENCIES) 
	@rm -f treetrans$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(treetrans_OBJECTS) $(treetrans_LDADD) $(LIBS)

unimaker$(EXEEXT): $(unimaker_OBJECTS) $(unimaker_DEPENDENCIES) $(EXTRA_unimaker_DEPENDENCIES) 
	@rm -f unimaker$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(unimaker_OBJECTS) $(unimaker_LDADD) $(LIBS)

up$(EXEEXT): $(up_OBJECTS) $(up_DEPENDENCIES) $(EXTRA_up_DEPENDENCIES) 
	@rm -f up$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(up_OBJECTS) $(up_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AmisBuiltin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AmisFilter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AmisModel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DataConv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DerivMaker.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Derivation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Derivbank.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ForestMaker.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Initializer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LexEntry.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LexExtractor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ParseTree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ParserBuiltin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Qc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/QuickCheck.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TemplateTable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Tree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TreeConverter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Treebank.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Word.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/amisfilter_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/forestmaker_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lex2html_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lexextract_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lexmerge_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lexrefine_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/super_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/treetrans_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unimaker_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/up_main.Po@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(HEADERS) config_mayz.h
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-noinstLIBRARIES \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: all install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-noinstLIBRARIES \
	clean-noinstPROGRAMS cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS

.PRECIOUS: Makefile


#
#  For test
#

# bin_PROGRAMS = arraytest

# arraytest_SOURCES = \
# 	arraytest.cc

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
